[
    {
        "title": "Skintector",
        "links": [
            "https://skintector.vercel.app",
            "https://www.youtube.com/watch?v=CnpN-qIJ_VI",
            "https://github.com/jeffreyjkjin/Skintector"
        ],
        "tools": [
            "Dexie",
            "Figma",
            "Flask",
            "Mantine",
            "Python",
            "React",
            "Tailwind",
            "TensorFlow",
            "TypeScript",
            "Vite"
        ],
		"image": "/skintector.gif",
        "what": "Diagnose skin conditions from the comfort of your own home. Developed for CMPT 340 Spring 2024 at SFU.",
        "soWhat": [
            "Prototyped the front-end using Figma and implemented it in React using Tailwind and Mantine, producing a responsive and easy-to-use web interface ",
            "Built the back-end server using Flask to serve a skin lesion classification TensorFlow model",
            "Wrote scripts using Selenium to scrape and format responses for nearly 200 skin conditions from ChatGPT"
        ]
    },
	{
        "title": "Hippo Bot",
        "links": [
            "https://github.com/jeffreyjkjin/Hippo-Bot" 
        ],
        "tools": [
			"discord.js",
			"MongoDB",
			"TypeScript"
        ],
        "image": "/hippobot.gif",
        "what": "Quickly schedule events, set reminders, and create polls natively all without ever having to leave Discord.",
        "soWhat": [
			"Created a database with MongoDB to keep track of events, polls, and reminders for over a hundred users",
			"Used modals from discord.js to build native forms to allow users to generate new events and polls"
        ]
    },
    {
        "title": "Personal Website",
        "links": [
            "https://www.jeffreyjin.com",
            "https://github.com/jeffreyjkjin/Personal-Website" 
        ],
        "image": "/personalsite.gif",
        "tools": [
			"Figma",
			"React",
			"Tailwind",
            "TypeScript",
			"Vite"
        ],
        "what": "The website you are on right now! Developed so I could learn web development and have a place to show off my projects.",
        "soWhat": [
            "Designed a modern and clean single-page portfolio with Figma",
            "Used React to create functional and reusable components and add scroll animations",
            "Styled using Tailwind to replicate the initial prototype and make the user interface responsive"
        ]
    },
    {
        "title": "Simple Processor Pipeline Simulator",
        "links": [
            "https://github.com/jeffreyjkjin/Simple-Processor-Pipeline-Simulator" 
        ], 
        "image": "/spps.jpg",
        "tools": [
            "C++"
        ],
        "what": "A simple cycle-accurate simulator for a W-wide superscalar in-order processor with five stages. Developed for CMPT 305 Spring 2023 at SFU.",
        "soWhat": [
            "Handled instruction arrivals and departures with a queue to ensure instructions do not proceed out-of-order or with unsatisfied dependencies",
            "Stored retired instructions in an unordered map to prevent data hazards",
            "Completed a two-factor analysis to determine the impact of pipeline width and workload on execution time"
        ]
    },
    {
        "title": "Untitled Farm Game",
        "links": [
            "https://jeffreyjin.itch.io/untitled-farm-game",
            "https://www.youtube.com/watch?v=4MRnaP6zbAo",
            "https://github.com/jeffreyjkjin/Untitled-Farm-Game" 
        ], 
        "image": "/farmgame.gif",
        "tools": [
            "Figma",
            "Java",
			"JavaDocs",
			"JUnit",
            "Maven"
        ],
        "what": "A 2D arcade-style game where you play as a freedom-loving chicken. Developed for CMPT 276 Fall 2022 at SFU.",
        "soWhat": [
            "Modelled components using UML diagrams to facilitate the implementation of the game's underlying classes and relations",
            "Utilized graphical utilities to prototype user interfaces and illustrate game sprites and tiles",
            "Wrote Javadoc comments to ensure the game maintainability",
            "Constructed tests using JUnit to evaluate the game's features, resulting in over 80% code coverage"
        ]
    }
]